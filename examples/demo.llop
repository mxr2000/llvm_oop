CLASS Person (Object) []
BEGIN
    VAR age: Int
    VAR salary: Int

    FUNC init(age: Int, salary: Int) -> Void
    BEGIN
        self.age = age
        self.salary = salary
    END

    FUNC getAge() -> Int
    BEGIN
        RETURN self.age
    END

    FUNC getSalary() -> Int
    BEGIN
        RETURN self.age
    END
END

STATIC Person
BEGIN
    FUNC compare(p1: Person, p2: Person) -> Int
    BEGIN
        RETURN p1.getAge() - p2.getAge()
    END
END

INTERFACE Consumer
BEGIN
    FUNC consume() -> Void
END

CLASS Employee (Person) [Consumer]
BEGIN
    VAR id: Int

    FUNC init(age: Int, salary: Int, id: Int) -> Void
    BEGIN
        super.init(age, salary)
        self.id = id
    END

    FUNC getSalary() -> Int
    BEGIN
        RETURN 0
    END

    FUNC Consumer() -> Void
    BEGIN
        IF (self.salary > 1000) THEN
            self.salary = 1000
        WHILE (self.salary > 0)
            self.salary = self.salary - 1
        IF self.salary < 0 THEN
        BEGIN
            self.salary = self.salary + 10
        END
    END
END

STATIC Program
BEGIN
    FUNC main() -> Void
    BEGIN
        VAR person: Person
        VAR employee: Employee
        VAR e: Employee
        person = new Person(10, 100)
        employee = new Employee(20, 1000, 20)
        p = person.[Employee]
        p = e.a.c().[Dick]
    END
END